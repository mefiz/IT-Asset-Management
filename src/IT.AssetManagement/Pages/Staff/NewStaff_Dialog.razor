@using Domain.Models
@using Domain.Services

@inject IAssetsService AssetsService
@inject IStaffsService StaffsService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudForm @ref="form">
             <MudGrid>
                <MudItem xs="12" sm="4">
                    <MudTextField T="string" Label="Staff Number" @bind-Value="@staff.StaffNumber" Required="true" RequiredError="Staff number is required!"/>
                </MudItem>

                <MudItem xs="12" sm="4">
                    <MudTextField T="string" Label="Name" @bind-Value="@staff.Name" Required="true" RequiredError="Staff name is required!"/>
                </MudItem>

                <MudItem xs="12" sm="4">
                    <MudTextField T="string" Label="National ID Number" @bind-Value="@staff.NationalIdentificationNumber" Required="true" RequiredError="NID is required!"/>
                </MudItem>

                <MudItem xs="12" sm="4">
                    <MudSelect Label="Department" T="Department" @bind-Value="@selectedDepartment" MultiSelection="false" Required="true" RequiredError="Department is required!" >
                        @foreach (var department in departments)
                        {
                            <MudSelectItem Value="@(department)">@department.Name</MudSelectItem>
                        }
                     </MudSelect>
                </MudItem>

             </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="@(() => Save())">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    void Cancel() => MudDialog.Cancel();

    private Staff staff = new Staff();
    private Department selectedDepartment = null;

    private IEnumerable<Department> departments = null;

    MudForm form;

    protected override async Task OnInitializedAsync()
    {
        departments = await StaffsService.GetDepartmentsAsync();
    }

    private async void Save() {
        form.Validate();

        if(form.IsValid)
        {
            var savedStaff = await StaffsService.SaveNewStaffAsync(staff, selectedDepartment);
            Snackbar.Add("Staff added successfully!", Severity.Success);
            MudDialog.Close(DialogResult.Ok(savedStaff));
        }
    }
}