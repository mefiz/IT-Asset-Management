// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace IT.AssetManagement.Pages.Index
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/_Imports.razor"
using IT.AssetManagement;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/_Imports.razor"
using IT.AssetManagement.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/_Imports.razor"
using MudBlazor.Dialog;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/Pages/Index/Index.razor"
using Domain.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/Pages/Index/Index.razor"
using Domain.Enums;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/Pages/Index/Index.razor"
using Domain.Services;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 57 "/Users/mubah/Projects/IT-Asset-Management/src/IT.AssetManagement/Pages/Index/Index.razor"
       
    private string searchString = "";
    private Asset selectedAsset = null;
    private ICollection<Asset> assets = null;
    private HashSet<Asset> selectedAssets = new HashSet<Asset>();

    protected override async Task OnInitializedAsync()
    {   
        assets = await AssetsService.GetAssetsAsync();
    }

    private bool FilterFunc(Asset asset)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (asset.AssetNumber.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (asset.Status.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (asset.Type.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (asset.PurchasedDate.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (asset.LastAssignedDate.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (asset.DiscardedDate.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    private async void OpenNewAssetDialog() {
        var dialog = Dialog.Show<NewAsset_Dialog>("New Asset", new DialogOptions() { MaxWidth = MaxWidth.Medium, FullWidth = true });
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
           assets.Clear();
           assets = await AssetsService.GetAssetsAsync();
        }
        this.StateHasChanged();
    }

    private async void OpenAssignAssetDialog(Asset asset) {
        var parameters = new DialogParameters();
        parameters.Add("selectedAsset", asset);

        var dialog = Dialog.Show<AssignAsset_Dialog>("Assign Asset", parameters, new DialogOptions() { MaxWidth = MaxWidth.Medium, FullWidth = true });
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
           assets.Clear();
           assets = await AssetsService.GetAssetsAsync();
        }
        this.StateHasChanged();  
    }

    private async void DiscardAsset(Asset asset) {
        var parameters = new DialogParameters();
        parameters.Add("ContentText", "Do you really want to discard this asset? This process cannot be undone.");
        parameters.Add("ButtonText", "Delete");
        parameters.Add("Color", Color.Error);

        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };
        
        var dialog = Dialog.Show<Dialog>("Delete", parameters, options);
        
        var result = await dialog.Result;

        if (!result.Cancelled)
        {   
            Snackbar.Add("Asset deletd successfully!", Severity.Warning);
           await AssetsService.DiscardAssetAsync(asset); 
           assets.Clear();
           assets = await AssetsService.GetAssetsAsync();
        }
        this.StateHasChanged();
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISnackbar Snackbar { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IDialogService Dialog { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IAssetsService AssetsService { get; set; }
    }
}
#pragma warning restore 1591
